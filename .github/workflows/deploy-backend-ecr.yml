name: Build & Push Flask Backend to ECR
on:
  push:
    branches: [master]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $(aws ecr describe-repositories --repository-names cvgram-backend --region eu-west-2 --query 'repositories[0].repositoryUri' --output text)

      - name: Build Docker image
        run: docker build -t cvgram-backend:latest ./Backend

      - name: Tag Docker image
        run: |
          REPO_URI=$(aws ecr describe-repositories --repository-names cvgram-backend --region eu-west-2 --query 'repositories[0].repositoryUri' --output text)
          docker tag cvgram-backend:latest $REPO_URI:latest

      - name: Push Docker image to ECR
        run: |
          REPO_URI=$(aws ecr describe-repositories --repository-names cvgram-backend --region eu-west-2 --query 'repositories[0].repositoryUri' --output text)
          docker push $REPO_URI:latest

      - name: Notify deploy
        run: |
          MASTER_IP=$(jq -r '.master.public_ip' ../ec2.json)
          REPO_URI=$(aws ecr describe-repositories --repository-names cvgram-backend --region eu-west-2 --query 'repositories[0].repositoryUri' --output text)
          curl -X POST http://$MASTER_IP:5000/webhook \
            -H "Content-Type: application/json" \
            -H "X-Auth-Token: ${{ secrets.DEPLOY_TOKEN }}" \
            -d "{\"image\": \"$REPO_URI:latest\"}"
